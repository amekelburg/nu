.navbar-fixed-top{ role: 'navigation' }
  .navbar.navbar-inverse
    .container
      .navbar-header
        %button.navbar-toggle.collapsed{ type: 'button', data: { toggle: 'collapse', target: '.navbar-collapse' } }
          %span.sr-only Toggle navigation
          %span.icon-bar
          %span.icon-bar
          %span.icon-bar
        = link_to (logged_in? ? :dashboard : :root), class: 'navbar-brand' do
          = image_tag "logo.png", size: "114x45"

      = render partial: "layouts/top_menu"

  - if logged_in? && !public_page?
    .submenu{ class: @section }
      .container
        .row
          .col-sm-12.bar
            - if @section_root or ![ :experiments, :libraries, :projects, :profile ].include?(@section)
              .menu
                = link_to icon_tag("menu"), "#", class: 'btn-lg dropdown-toggle', data: { toggle: 'dropdown' }, role: 'button'
                %ul.dropdown-menu
                  - %w{ experiments libraries projects }.each do |s|
                    %li= link_to "#{icon_tag(section_icon(s))}#{t("submenu.#{s}")}".html_safe, section_root_path(s)
                  %li.divider{ role: "separator" }
                  %li= link_to "#{icon_tag(section_icon(:dashboard))}#{t("submenu.dashboard")}".html_safe, section_root_path(:dashboard)
                  - if admin?
                    %li.divider{ role: "separator" }
                    %li.no-icon= link_to t("submenu.project_requests"), new_project_requests_path
                    %li.no-icon= link_to t("submenu.user_admin"), '#TBD'
                    %li.no-icon= link_to t("submenu.project_admin"), '#TBD'
                    %li.no-icon= link_to t("submenu.privilege_admin"), '#TBD'
            - else
              = link_to icon_tag(section_icon(@section)), section_root_path(@section), class: 'btn-lg'


            .title= @section_title || (@section && @section.capitalize)

            - if @section
              = render partial: "actions/#{@section}"
              -# rescue ''

        -# .navbar.navbar-inverse{ role: 'navigation' }
        -#   %ul.nav.navbar-nav
        -#     -# = submenu_item :profile, "Profile", my_profile_path

        -#     = dropdown_submenu_item [ :my_experiments, :new_experiment ], t("submenu.experiments") do
        -#       = submenu_item :my_experiments, t("submenu.my_experiments"), experiments_path
        -#       = submenu_item :new_experiment, t("submenu.new_experiment"), new_experiment_path
        -#     = dropdown_submenu_item [ :main_library, :libraries, :other_libraries, :new_library ], t("submenu.libraries") do
        -#       = submenu_item :main_library, Library::MAIN_LIBRARY_NAME, library_path(Library::MAIN_LIBRARY_ID)
        -#       = submenu_item :libraries, t("submenu.libraries"), libraries_path
        -#       = submenu_item :new_library, t("submenu.create_new_library"), new_library_path
        -#     = dropdown_submenu_item [ :my_projects, :new_project, :join_project, :manage_project ], t("submenu.projects") do
        -#       = submenu_item :my_projects, t("submenu.my_projects"), projects_path
        -#       = submenu_item :new_project, t("submenu.new_project"), new_project_path
        -#       = submenu_item :join_project, t("submenu.join_project"), new_project_join_path
        -#       %li.dropdown-submenu{ class: @submenu == :manage_project ? 'active' : nil }
        -#         = link_to t("submenu.manage_projects"), "#", tabindex: -1
        -#         %ul.dropdown-menu
        -#           - projects = Rails.env.test? ? [] : deter_lab.get_managed_projects.reject(&:admin?)
        -#           - if projects.blank?
        -#             %li= link_to t("submenu.no_managed_projects"), "#"
        -#           - else
        -#             - projects.each do |p|
        -#               %li{ class: p.project_id == params[:id] ? 'active' : nil }
        -#                 = link_to t("submenu.manage_project", id: p.project_id), manage_project_path(p.project_id)
        -#     -# = dropdown_submenu_item [ :new_notifications, :all_notifications ], t("submenu.notifications") do
        -#     -#   = submenu_item :new_notifications, t("submenu.new_notifications"), new_only_notifications_path
        -#     -#   = submenu_item :all_notifications, t("submenu.all_notifications"), notifications_path
        -#     - if admin?
        -#       = dropdown_submenu_item [ :project_requests, :user_admin, :project_admin, :privilege_admin ], t("submenu.administration") do
        -#         = submenu_item :project_requests, t("submenu.project_requests"), new_project_requests_path
        -#         = submenu_item :user_admin, t("submenu.user_admin"), "#TBD"
        -#         = submenu_item :project_admin, t("submenu.project_admin"), "#TBD"
        -#         = submenu_item :privilege_admin, t("submenu.privilege_admin"), "#TBD"
